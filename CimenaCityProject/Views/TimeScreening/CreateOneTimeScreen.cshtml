@model CimenaCityProject.Models.TimeScreening

@{
    var SelectMovieID = (SelectList)ViewBag.MovieID;
    var SelectHomeCinemaID = (SelectList)ViewBag.HomeCinemaID;
}

@using (Html.BeginForm("Create", "TimeScreening", FormMethod.Post, new { id = "CreateOne", name = "CreateOne" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true)
        <table>
            <tr>
                <th>
                    @Html.Label("Theatres", new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.Label("ShowTime", new { @class = "control-label col-md-2" })
                </th>

                <th>
                    @Html.Label("Date", new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.Label("Price", new { @class = "control-label col-md-2" })
                </th>
                <th>
                    @Html.Label("Is Displayed", new { @class = "control-label col-md-2" })
                </th>
                <th>
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" id="NewTimeScreen" />
                    </div>
                </th>
            </tr>

            <tr>
                <td>
                    <div class="col-sm-8">
                        <br />
                        @Html.DropDownList("HomeCinemaID", SelectHomeCinemaID, "Select Home Cinema", new { id = "HomeCinemaID", name = "HomeCinemaID" })
                        <br /><br />
                        @Html.DropDownListFor(model => model.MovieTheatersID, Enumerable.Empty<SelectListItem>()
                                                   , "--Loading Value--", new { id = "TheatresName", name = "TheatresName" })
                        @Html.ValidationMessageFor(model => model.MovieTheatersID)
                    </div>
                </td>
                <td>
                    <div class="col-sm-8">
                        <br />
                        @Html.DropDownList("MovieID", SelectMovieID, "Select Movie", new { id = "MovieID", name = "MovieID" })
                        <br /><br />
                        @Html.DropDownListFor(model => model.MovieShowTimeID, Enumerable.Empty<SelectListItem>()
                                                  , "--Loading Value--", new { id = "ShowTime", name = "ShowTime" })
                        @Html.ValidationMessageFor(model => model.MovieShowTimeID)
                    </div>
                </td>

                <td>
                    <div class="col-sm-8">
                        <br />
                        @Html.TextBoxFor(model => model.Date, new { @class = "datepicker" })
                        @Html.ValidationMessageFor(model => model.Date)
                    </div>
                </td>
                <td>
                    <div class="col-sm-8">
                        <br />
                        @Html.EditorFor(model => model.Price)
                        @Html.ValidationMessageFor(model => model.Price)
                    </div>
                </td>
                <td>
                    <div class="col-sm-8">
                        <br />
                        @Html.EditorFor(model => model.IsDisplayed)
                        @Html.ValidationMessageFor(model => model.IsDisplayed)
                    </div>
                </td>
                <td></td>
            </tr>

        </table>
    </div>
}


<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.1/jquery.min.js"></script>

<link rel="stylesheet" type="text/css" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css">
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<script type="text/javascript">
    $(function () {
        $('#Date').datepicker({ dateFormat: 'dd/MM/yy' });
    });
</script>


<script type="text/javascript">

    $(function () {
        $('#HomeCinemaID').change(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetTheatres","TimeScreening")',
                data: { CinemaID: $('#HomeCinemaID').val() },
                success: function (data) {
                    $('#TheatresName').html('');
                    $('#TheatresName').append($('<option></option>').val(0).html("Pick a Theatr"));
                    $.each(data, function (id, option) {
                        $('#TheatresName').append($('<option></option>').val(option.id).html(option.name));
                    });
                },
                error: function (xhr, ajaxOptions, thrownEror) {
                    alert("Error by loading the Theatres");
                }
            });
        });
    });



    $(function () {
        $('#MovieID').change(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("GetShowTime", "TimeScreening")',
                data: { MovieID: $('#MovieID').val() },
                dataType: 'json',
                success: function (data) {
                    $('#ShowTime').html('');
                    $('#ShowTime').append($('<option></option>').val(0).html("Pick a time"));
                    $.each(data, function (id, option) {
                        var name = DatetimeConverter(option.name)
                        $('#ShowTime').append($('<option></option>').val(option.id).html(name));
                    });

                },
                error: function (xhr, ajaxOptions, thrownEror) {
                    alert("False" + xhr + "..." + ajaxOptions + "... " + thrownEror);
                }
            });
        });
    });


    $(function () {
        $('#ShowTime').change(function () {
            $.ajax({
                type: "POST",
                url: '@Url.Action("CheckIfContractExist", "TimeScreening")',
                data: {
                    TheatresID: $('#TheatresName').val(),
                    ShowTimeID: $('#ShowTime').val()
                },
                dataType: 'json',
                success: function (data) {
                    if (data == true) {
                        alert("This Theatr Alredy exist in another contact /n Please Chosee another Theatre or another time.")
                        $('#ShowTime').html('')
                        $('#TheatresName').html('')
                        $('#ShowTime').append($('<option></option>').val(0).html("Pick a Movie"));
                        $('#TheatresName').append($('<option></option>').val(0).html("Pick a HomeCinema"));
                    }
                },
                error: function (xhr, ajaxOptions, thrownEror) {
                    alert("False" + xhr + "..." + ajaxOptions + "... " + thrownEror);
                }
            });
        });
    });


    // Get the Price For each type of movie
    $(function () {
        $('#TheatresName').change(function () {
            var ParamName = $('#TheatresName').text();
            if (/MAX/.test(ParamName) || /Max/.test(ParamName) || /MAx/.test(ParamName) || /max/.test(ParamName)
                || /mAx/.test(ParamName) || /maX/.test(ParamName) || /mAX/.test(ParamName))
            {
                document.getElementById('Price').value = 43
            }
            else if (/VIP/.test(ParamName) || /VIp/.test(ParamName)
            || /vIP/.test(ParamName) )
            {
               document.getElementById('Price').value = 38
            }
            else
            {
                document.getElementById('Price').value = 35
            }
        });
    });


    // START Datetime Converters
    function DateConverter(date) {
        var aux = null;
        if (date != null) {
            aux = date.substring(6);
            aux = aux.substring(0, aux.indexOf(')'));
        }

        return aux != null ? getISODate(new Date(parseInt(aux))) : "";
    }

    function DatetimeConverter(date) {
        var aux = null;
        if (date != null) {
            aux = date.substring(6);
            aux = aux.substring(0, aux.indexOf(')'));
        }
        return aux != null ? getISODateTime(new Date(parseInt(aux))) : "";
    }

    function getISODate(d) {
        // padding function
        var s = function (a, b) { return (1e15 + a + "").slice(-b) };

        // default date parameter
        if (typeof d === 'undefined') {
            d = new Date();
        };

        // return ISO datetime
        return zeroPad(d.getDate(), 2) + '/' +
        zeroPad(s(d.getMonth() + 1, 2), 2) + '/' +
        zeroPad(d.getFullYear(), 4);
    }

    function getISODateTime(d) {
        // padding function
        var s = function (a, b) { return (1e15 + a + "").slice(-b) };

        // default date parameter
        if (typeof d === 'undefined') {
            d = new Date();
        };

        // return ISO datetime
        return zeroPad(d.getHours(), 2) + ":" +
        zeroPad(d.getMinutes(), 2) + ":" +
        zeroPad(d.getSeconds(), 2);
    }

    function zeroPad(num, places) {
        var zero = places - num.toString().length + 1;
        return Array(+(zero > 0 && zero)).join("0") + num;
    }
    // END Datetime Converters


</script>